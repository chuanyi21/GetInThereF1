{"id":"../../../node_modules/remark-parse/lib/tokenizer.js","dependencies":[{"name":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/package.json","includedInParent":true,"mtime":1609931669338},{"name":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/node_modules/remark-parse/package.json","includedInParent":true,"mtime":1609413027378}],"generated":{"js":"'use strict'\n\nmodule.exports = factory\n\n// Construct a tokenizer.  This creates both `tokenizeInline` and `tokenizeBlock`.\nfunction factory(type) {\n  return tokenize\n\n  // Tokenizer for a bound `type`.\n  function tokenize(value, location) {\n    var self = this\n    var offset = self.offset\n    var tokens = []\n    var methods = self[type + 'Methods']\n    var tokenizers = self[type + 'Tokenizers']\n    var line = location.line\n    var column = location.column\n    var index\n    var length\n    var method\n    var name\n    var matched\n    var valueLength\n\n    // Trim white space only lines.\n    if (!value) {\n      return tokens\n    }\n\n    // Expose on `eat`.\n    eat.now = now\n    eat.file = self.file\n\n    // Sync initial offset.\n    updatePosition('')\n\n    // Iterate over `value`, and iterate over all tokenizers.  When one eats\n    // something, re-iterate with the remaining value.  If no tokenizer eats,\n    // something failed (should not happen) and an exception is thrown.\n    while (value) {\n      index = -1\n      length = methods.length\n      matched = false\n\n      while (++index < length) {\n        name = methods[index]\n        method = tokenizers[name]\n\n        // Previously, we had constructs such as footnotes and YAML that used\n        // these properties.\n        // Those are now external (plus there are userland extensions), that may\n        // still use them.\n        if (\n          method &&\n          /* istanbul ignore next */ (!method.onlyAtStart || self.atStart) &&\n          /* istanbul ignore next */ (!method.notInList || !self.inList) &&\n          /* istanbul ignore next */ (!method.notInBlock || !self.inBlock) &&\n          (!method.notInLink || !self.inLink)\n        ) {\n          valueLength = value.length\n\n          method.apply(self, [eat, value])\n\n          matched = valueLength !== value.length\n\n          if (matched) {\n            break\n          }\n        }\n      }\n\n      /* istanbul ignore if */\n      if (!matched) {\n        self.file.fail(new Error('Infinite loop'), eat.now())\n      }\n    }\n\n    self.eof = now()\n\n    return tokens\n\n    // Update line, column, and offset based on `value`.\n    function updatePosition(subvalue) {\n      var lastIndex = -1\n      var index = subvalue.indexOf('\\n')\n\n      while (index !== -1) {\n        line++\n        lastIndex = index\n        index = subvalue.indexOf('\\n', index + 1)\n      }\n\n      if (lastIndex === -1) {\n        column += subvalue.length\n      } else {\n        column = subvalue.length - lastIndex\n      }\n\n      if (line in offset) {\n        if (lastIndex !== -1) {\n          column += offset[line]\n        } else if (column <= offset[line]) {\n          column = offset[line] + 1\n        }\n      }\n    }\n\n    // Get offset.  Called before the first character is eaten to retrieve the\n    // range’s offsets.\n    function getOffset() {\n      var indentation = []\n      var pos = line + 1\n\n      // Done.  Called when the last character is eaten to retrieve the range’s\n      // offsets.\n      return function () {\n        var last = line + 1\n\n        while (pos < last) {\n          indentation.push((offset[pos] || 0) + 1)\n\n          pos++\n        }\n\n        return indentation\n      }\n    }\n\n    // Get the current position.\n    function now() {\n      var pos = {line: line, column: column}\n\n      pos.offset = self.toOffset(pos)\n\n      return pos\n    }\n\n    // Store position information for a node.\n    function Position(start) {\n      this.start = start\n      this.end = now()\n    }\n\n    // Throw when a value is incorrectly eaten.  This shouldn’t happen but will\n    // throw on new, incorrect rules.\n    function validateEat(subvalue) {\n      /* istanbul ignore if */\n      if (value.slice(0, subvalue.length) !== subvalue) {\n        // Capture stack-trace.\n        self.file.fail(\n          new Error(\n            'Incorrectly eaten value: please report this warning on https://git.io/vg5Ft'\n          ),\n          now()\n        )\n      }\n    }\n\n    // Mark position and patch `node.position`.\n    function position() {\n      var before = now()\n\n      return update\n\n      // Add the position to a node.\n      function update(node, indent) {\n        var previous = node.position\n        var start = previous ? previous.start : before\n        var combined = []\n        var n = previous && previous.end.line\n        var l = before.line\n\n        node.position = new Position(start)\n\n        // If there was already a `position`, this node was merged.  Fixing\n        // `start` wasn’t hard, but the indent is different.  Especially\n        // because some information, the indent between `n` and `l` wasn’t\n        // tracked.  Luckily, that space is (should be?) empty, so we can\n        // safely check for it now.\n        if (previous && indent && previous.indent) {\n          combined = previous.indent\n\n          if (n < l) {\n            while (++n < l) {\n              combined.push((offset[n] || 0) + 1)\n            }\n\n            combined.push(before.column)\n          }\n\n          indent = combined.concat(indent)\n        }\n\n        node.position.indent = indent || []\n\n        return node\n      }\n    }\n\n    // Add `node` to `parent`s children or to `tokens`.  Performs merges where\n    // possible.\n    function add(node, parent) {\n      var children = parent ? parent.children : tokens\n      var previous = children[children.length - 1]\n      var fn\n\n      if (\n        previous &&\n        node.type === previous.type &&\n        (node.type === 'text' || node.type === 'blockquote') &&\n        mergeable(previous) &&\n        mergeable(node)\n      ) {\n        fn = node.type === 'text' ? mergeText : mergeBlockquote\n        node = fn.call(self, previous, node)\n      }\n\n      if (node !== previous) {\n        children.push(node)\n      }\n\n      if (self.atStart && tokens.length !== 0) {\n        self.exitStart()\n      }\n\n      return node\n    }\n\n    // Remove `subvalue` from `value`.  `subvalue` must be at the start of\n    // `value`.\n    function eat(subvalue) {\n      var indent = getOffset()\n      var pos = position()\n      var current = now()\n\n      validateEat(subvalue)\n\n      apply.reset = reset\n      reset.test = test\n      apply.test = test\n\n      value = value.slice(subvalue.length)\n\n      updatePosition(subvalue)\n\n      indent = indent()\n\n      return apply\n\n      // Add the given arguments, add `position` to the returned node, and\n      // return the node.\n      function apply(node, parent) {\n        return pos(add(pos(node), parent), indent)\n      }\n\n      // Functions just like apply, but resets the content: the line and\n      // column are reversed, and the eaten value is re-added.   This is\n      // useful for nodes with a single type of content, such as lists and\n      // tables.  See `apply` above for what parameters are expected.\n      function reset() {\n        var node = apply.apply(null, arguments)\n\n        line = current.line\n        column = current.column\n        value = subvalue + value\n\n        return node\n      }\n\n      // Test the position, after eating, and reverse to a not-eaten state.\n      function test() {\n        var result = pos({})\n\n        line = current.line\n        column = current.column\n        value = subvalue + value\n\n        return result.position\n      }\n    }\n  }\n}\n\n// Check whether a node is mergeable with adjacent nodes.\nfunction mergeable(node) {\n  var start\n  var end\n\n  if (node.type !== 'text' || !node.position) {\n    return true\n  }\n\n  start = node.position.start\n  end = node.position.end\n\n  // Only merge nodes which occupy the same size as their `value`.\n  return (\n    start.line !== end.line || end.column - start.column === node.value.length\n  )\n}\n\n// Merge two text nodes: `node` into `prev`.\nfunction mergeText(previous, node) {\n  previous.value += node.value\n\n  return previous\n}\n\n// Merge two blockquotes: `node` into `prev`, unless in CommonMark or gfm modes.\nfunction mergeBlockquote(previous, node) {\n  if (this.options.commonmark || this.options.gfm) {\n    return node\n  }\n\n  previous.children = previous.children.concat(node.children)\n\n  return previous\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenizer.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}}],"sources":{"../../../node_modules/remark-parse/lib/tokenizer.js":"'use strict'\n\nmodule.exports = factory\n\n// Construct a tokenizer.  This creates both `tokenizeInline` and `tokenizeBlock`.\nfunction factory(type) {\n  return tokenize\n\n  // Tokenizer for a bound `type`.\n  function tokenize(value, location) {\n    var self = this\n    var offset = self.offset\n    var tokens = []\n    var methods = self[type + 'Methods']\n    var tokenizers = self[type + 'Tokenizers']\n    var line = location.line\n    var column = location.column\n    var index\n    var length\n    var method\n    var name\n    var matched\n    var valueLength\n\n    // Trim white space only lines.\n    if (!value) {\n      return tokens\n    }\n\n    // Expose on `eat`.\n    eat.now = now\n    eat.file = self.file\n\n    // Sync initial offset.\n    updatePosition('')\n\n    // Iterate over `value`, and iterate over all tokenizers.  When one eats\n    // something, re-iterate with the remaining value.  If no tokenizer eats,\n    // something failed (should not happen) and an exception is thrown.\n    while (value) {\n      index = -1\n      length = methods.length\n      matched = false\n\n      while (++index < length) {\n        name = methods[index]\n        method = tokenizers[name]\n\n        // Previously, we had constructs such as footnotes and YAML that used\n        // these properties.\n        // Those are now external (plus there are userland extensions), that may\n        // still use them.\n        if (\n          method &&\n          /* istanbul ignore next */ (!method.onlyAtStart || self.atStart) &&\n          /* istanbul ignore next */ (!method.notInList || !self.inList) &&\n          /* istanbul ignore next */ (!method.notInBlock || !self.inBlock) &&\n          (!method.notInLink || !self.inLink)\n        ) {\n          valueLength = value.length\n\n          method.apply(self, [eat, value])\n\n          matched = valueLength !== value.length\n\n          if (matched) {\n            break\n          }\n        }\n      }\n\n      /* istanbul ignore if */\n      if (!matched) {\n        self.file.fail(new Error('Infinite loop'), eat.now())\n      }\n    }\n\n    self.eof = now()\n\n    return tokens\n\n    // Update line, column, and offset based on `value`.\n    function updatePosition(subvalue) {\n      var lastIndex = -1\n      var index = subvalue.indexOf('\\n')\n\n      while (index !== -1) {\n        line++\n        lastIndex = index\n        index = subvalue.indexOf('\\n', index + 1)\n      }\n\n      if (lastIndex === -1) {\n        column += subvalue.length\n      } else {\n        column = subvalue.length - lastIndex\n      }\n\n      if (line in offset) {\n        if (lastIndex !== -1) {\n          column += offset[line]\n        } else if (column <= offset[line]) {\n          column = offset[line] + 1\n        }\n      }\n    }\n\n    // Get offset.  Called before the first character is eaten to retrieve the\n    // range’s offsets.\n    function getOffset() {\n      var indentation = []\n      var pos = line + 1\n\n      // Done.  Called when the last character is eaten to retrieve the range’s\n      // offsets.\n      return function () {\n        var last = line + 1\n\n        while (pos < last) {\n          indentation.push((offset[pos] || 0) + 1)\n\n          pos++\n        }\n\n        return indentation\n      }\n    }\n\n    // Get the current position.\n    function now() {\n      var pos = {line: line, column: column}\n\n      pos.offset = self.toOffset(pos)\n\n      return pos\n    }\n\n    // Store position information for a node.\n    function Position(start) {\n      this.start = start\n      this.end = now()\n    }\n\n    // Throw when a value is incorrectly eaten.  This shouldn’t happen but will\n    // throw on new, incorrect rules.\n    function validateEat(subvalue) {\n      /* istanbul ignore if */\n      if (value.slice(0, subvalue.length) !== subvalue) {\n        // Capture stack-trace.\n        self.file.fail(\n          new Error(\n            'Incorrectly eaten value: please report this warning on https://git.io/vg5Ft'\n          ),\n          now()\n        )\n      }\n    }\n\n    // Mark position and patch `node.position`.\n    function position() {\n      var before = now()\n\n      return update\n\n      // Add the position to a node.\n      function update(node, indent) {\n        var previous = node.position\n        var start = previous ? previous.start : before\n        var combined = []\n        var n = previous && previous.end.line\n        var l = before.line\n\n        node.position = new Position(start)\n\n        // If there was already a `position`, this node was merged.  Fixing\n        // `start` wasn’t hard, but the indent is different.  Especially\n        // because some information, the indent between `n` and `l` wasn’t\n        // tracked.  Luckily, that space is (should be?) empty, so we can\n        // safely check for it now.\n        if (previous && indent && previous.indent) {\n          combined = previous.indent\n\n          if (n < l) {\n            while (++n < l) {\n              combined.push((offset[n] || 0) + 1)\n            }\n\n            combined.push(before.column)\n          }\n\n          indent = combined.concat(indent)\n        }\n\n        node.position.indent = indent || []\n\n        return node\n      }\n    }\n\n    // Add `node` to `parent`s children or to `tokens`.  Performs merges where\n    // possible.\n    function add(node, parent) {\n      var children = parent ? parent.children : tokens\n      var previous = children[children.length - 1]\n      var fn\n\n      if (\n        previous &&\n        node.type === previous.type &&\n        (node.type === 'text' || node.type === 'blockquote') &&\n        mergeable(previous) &&\n        mergeable(node)\n      ) {\n        fn = node.type === 'text' ? mergeText : mergeBlockquote\n        node = fn.call(self, previous, node)\n      }\n\n      if (node !== previous) {\n        children.push(node)\n      }\n\n      if (self.atStart && tokens.length !== 0) {\n        self.exitStart()\n      }\n\n      return node\n    }\n\n    // Remove `subvalue` from `value`.  `subvalue` must be at the start of\n    // `value`.\n    function eat(subvalue) {\n      var indent = getOffset()\n      var pos = position()\n      var current = now()\n\n      validateEat(subvalue)\n\n      apply.reset = reset\n      reset.test = test\n      apply.test = test\n\n      value = value.slice(subvalue.length)\n\n      updatePosition(subvalue)\n\n      indent = indent()\n\n      return apply\n\n      // Add the given arguments, add `position` to the returned node, and\n      // return the node.\n      function apply(node, parent) {\n        return pos(add(pos(node), parent), indent)\n      }\n\n      // Functions just like apply, but resets the content: the line and\n      // column are reversed, and the eaten value is re-added.   This is\n      // useful for nodes with a single type of content, such as lists and\n      // tables.  See `apply` above for what parameters are expected.\n      function reset() {\n        var node = apply.apply(null, arguments)\n\n        line = current.line\n        column = current.column\n        value = subvalue + value\n\n        return node\n      }\n\n      // Test the position, after eating, and reverse to a not-eaten state.\n      function test() {\n        var result = pos({})\n\n        line = current.line\n        column = current.column\n        value = subvalue + value\n\n        return result.position\n      }\n    }\n  }\n}\n\n// Check whether a node is mergeable with adjacent nodes.\nfunction mergeable(node) {\n  var start\n  var end\n\n  if (node.type !== 'text' || !node.position) {\n    return true\n  }\n\n  start = node.position.start\n  end = node.position.end\n\n  // Only merge nodes which occupy the same size as their `value`.\n  return (\n    start.line !== end.line || end.column - start.column === node.value.length\n  )\n}\n\n// Merge two text nodes: `node` into `prev`.\nfunction mergeText(previous, node) {\n  previous.value += node.value\n\n  return previous\n}\n\n// Merge two blockquotes: `node` into `prev`, unless in CommonMark or gfm modes.\nfunction mergeBlockquote(previous, node) {\n  if (this.options.commonmark || this.options.gfm) {\n    return node\n  }\n\n  previous.children = previous.children.concat(node.children)\n\n  return previous\n}\n"},"lineCount":319}},"error":null,"hash":"bd97d423a650398d93ff385bebae5557","cacheData":{"env":{}}}