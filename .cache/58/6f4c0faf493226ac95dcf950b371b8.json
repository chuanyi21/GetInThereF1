{"id":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","dependencies":[{"name":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/package.json","includedInParent":true,"mtime":1609931669338},{"name":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/node_modules/remark-parse/package.json","includedInParent":true,"mtime":1609413027378},{"name":"../locate/code-inline","loc":{"line":3,"column":21},"parent":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/node_modules/remark-parse/lib/tokenize/code-inline.js","resolved":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/node_modules/remark-parse/lib/locate/code-inline.js"}],"generated":{"js":"'use strict'\n\nvar locate = require('../locate/code-inline')\n\nmodule.exports = inlineCode\ninlineCode.locator = locate\n\nvar lineFeed = 10 //  '\\n'\nvar space = 32 // ' '\nvar graveAccent = 96 //  '`'\n\nfunction inlineCode(eat, value, silent) {\n  var length = value.length\n  var index = 0\n  var openingFenceEnd\n  var closingFenceStart\n  var closingFenceEnd\n  var code\n  var next\n  var found\n\n  while (index < length) {\n    if (value.charCodeAt(index) !== graveAccent) {\n      break\n    }\n\n    index++\n  }\n\n  if (index === 0 || index === length) {\n    return\n  }\n\n  openingFenceEnd = index\n  next = value.charCodeAt(index)\n\n  while (index < length) {\n    code = next\n    next = value.charCodeAt(index + 1)\n\n    if (code === graveAccent) {\n      if (closingFenceStart === undefined) {\n        closingFenceStart = index\n      }\n\n      closingFenceEnd = index + 1\n\n      if (\n        next !== graveAccent &&\n        closingFenceEnd - closingFenceStart === openingFenceEnd\n      ) {\n        found = true\n        break\n      }\n    } else if (closingFenceStart !== undefined) {\n      closingFenceStart = undefined\n      closingFenceEnd = undefined\n    }\n\n    index++\n  }\n\n  if (!found) {\n    return\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true\n  }\n\n  // Remove the initial and final space (or line feed), iff they exist and there\n  // are non-space characters in the content.\n  index = openingFenceEnd\n  length = closingFenceStart\n  code = value.charCodeAt(index)\n  next = value.charCodeAt(length - 1)\n  found = false\n\n  if (\n    length - index > 2 &&\n    (code === space || code === lineFeed) &&\n    (next === space || next === lineFeed)\n  ) {\n    index++\n    length--\n\n    while (index < length) {\n      code = value.charCodeAt(index)\n\n      if (code !== space && code !== lineFeed) {\n        found = true\n        break\n      }\n\n      index++\n    }\n\n    if (found === true) {\n      openingFenceEnd++\n      closingFenceStart--\n    }\n  }\n\n  return eat(value.slice(0, closingFenceEnd))({\n    type: 'inlineCode',\n    value: value.slice(openingFenceEnd, closingFenceStart)\n  })\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/code-inline.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}}],"sources":{"../../../node_modules/remark-parse/lib/tokenize/code-inline.js":"'use strict'\n\nvar locate = require('../locate/code-inline')\n\nmodule.exports = inlineCode\ninlineCode.locator = locate\n\nvar lineFeed = 10 //  '\\n'\nvar space = 32 // ' '\nvar graveAccent = 96 //  '`'\n\nfunction inlineCode(eat, value, silent) {\n  var length = value.length\n  var index = 0\n  var openingFenceEnd\n  var closingFenceStart\n  var closingFenceEnd\n  var code\n  var next\n  var found\n\n  while (index < length) {\n    if (value.charCodeAt(index) !== graveAccent) {\n      break\n    }\n\n    index++\n  }\n\n  if (index === 0 || index === length) {\n    return\n  }\n\n  openingFenceEnd = index\n  next = value.charCodeAt(index)\n\n  while (index < length) {\n    code = next\n    next = value.charCodeAt(index + 1)\n\n    if (code === graveAccent) {\n      if (closingFenceStart === undefined) {\n        closingFenceStart = index\n      }\n\n      closingFenceEnd = index + 1\n\n      if (\n        next !== graveAccent &&\n        closingFenceEnd - closingFenceStart === openingFenceEnd\n      ) {\n        found = true\n        break\n      }\n    } else if (closingFenceStart !== undefined) {\n      closingFenceStart = undefined\n      closingFenceEnd = undefined\n    }\n\n    index++\n  }\n\n  if (!found) {\n    return\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true\n  }\n\n  // Remove the initial and final space (or line feed), iff they exist and there\n  // are non-space characters in the content.\n  index = openingFenceEnd\n  length = closingFenceStart\n  code = value.charCodeAt(index)\n  next = value.charCodeAt(length - 1)\n  found = false\n\n  if (\n    length - index > 2 &&\n    (code === space || code === lineFeed) &&\n    (next === space || next === lineFeed)\n  ) {\n    index++\n    length--\n\n    while (index < length) {\n      code = value.charCodeAt(index)\n\n      if (code !== space && code !== lineFeed) {\n        found = true\n        break\n      }\n\n      index++\n    }\n\n    if (found === true) {\n      openingFenceEnd++\n      closingFenceStart--\n    }\n  }\n\n  return eat(value.slice(0, closingFenceEnd))({\n    type: 'inlineCode',\n    value: value.slice(openingFenceEnd, closingFenceStart)\n  })\n}\n"},"lineCount":110}},"error":null,"hash":"2b9526aea32cc0d106827285b16869b0","cacheData":{"env":{}}}