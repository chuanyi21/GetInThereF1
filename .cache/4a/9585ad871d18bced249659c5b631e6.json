{"id":"../../../node_modules/text-diff/diff.js","dependencies":[{"name":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/package.json","includedInParent":true,"mtime":1609931669338},{"name":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/node_modules/text-diff/package.json","includedInParent":true,"mtime":1609413028091}],"generated":{"js":"/**\n * This library was modified by Harrison Liddiard. The source code to this\n * modified version can be found at https://github.com/liddiard/google-diff/.\n * The original source code can be found at\n * http://code.google.com/p/google-diff-match-patch/. This unofficial fork is\n * not maintained by or affiliated with Google Inc. The original attribution\n * and licensing information follows.\n */\n\n/**\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff.\n * @constructor\n */\nfunction diff(options) {\n  var options = options || {};\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Timeout = options.timeout || 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.EditCost = options.editCost || 4;\n}\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/** @typedef {{0: number, 1: string}} */\ndiff.Diff;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n *     then don't run a line-level diff first to identify the changed areas.\n *     Defaults to true, which does a faster, slightly less optimal diff.\n * @param {number} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff.Diff>} Array of diff tuples.\n */\ndiff.prototype.main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  this.cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff.Diff>} Array of diff tuples.\n * @private\n */\ndiff.prototype.compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\n             [DIFF_EQUAL, shorttext],\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = this.halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.lineMode_(text1, text2, deadline);\n  }\n\n  return this.bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff.Diff>} Array of diff tuples.\n * @private\n */\ndiff.prototype.lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n\n  var diffs = this.main(text1, text2, false, deadline);\n\n  // Convert the diff back to original text.\n  this.charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push([DIFF_EQUAL, '']);\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var a = this.main(text_delete, text_insert, false, deadline);\n          for (var j = a.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, a[j]);\n          }\n          pointer = pointer + a.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff.Diff>} Array of diff tuples.\n * @private\n */\ndiff.prototype.bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff.Diff>} Array of diff tuples.\n * @private\n */\ndiff.prototype.bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.main(text1a, text2a, false, deadline);\n  var diffsb = this.main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff.prototype.linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n      lineStart = lineEnd + 1;\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n    }\n    return chars;\n  }\n\n  var chars1 = diff_linesToCharsMunge_(text1);\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff.prototype.charsToLines_ = function(diffs, lineArray) {\n  for (var x = 0; x < diffs.length; x++) {\n    var chars = diffs[x][1];\n    var text = [];\n    for (var y = 0; y < chars.length; y++) {\n      text[y] = lineArray[chars.charCodeAt(y)];\n    }\n    diffs[x][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff.prototype.commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff.prototype.commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff.prototype.commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff.prototype.halfMatch_ = function(text1, text2) {\n  if (this.Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.commonPrefix(longtext.substring(i),\n                                          shorttext.substring(j));\n      var suffixLength = dmp.commonSuffix(longtext.substring(0, i),\n                                          shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n */\ndiff.prototype.cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastequality && (lastequality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastequality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.cleanupMerge(diffs);\n  }\n  this.cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 ||\n            overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, insertion.substring(0, overlap_length1)]);\n          diffs[pointer - 1][1] =\n              deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 ||\n            overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, deletion.substring(0, overlap_length2)]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] =\n              insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] =\n              deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n */\ndiff.prototype.cleanupSemanticLossless = function(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 &&\n        char1.match(diff.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 &&\n        char2.match(diff.whitespaceRegex_);\n    var lineBreak1 = whitespace1 &&\n        char1.match(diff.linebreakRegex_);\n    var lineBreak2 = whitespace2 &&\n        char2.match(diff.linebreakRegex_);\n    var blankLine1 = lineBreak1 &&\n        one.match(diff.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 &&\n        two.match(diff.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n// Define some regex patterns for matching boundaries.\ndiff.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff.whitespaceRegex_ = /\\s/;\ndiff.linebreakRegex_ = /[\\r\\n]/;\ndiff.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n */\ndiff.prototype.cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastequality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastequality = null;\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastequality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastequality.length < this.EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastequality = null;\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n */\ndiff.prototype.cleanupMerge = function(diffs) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL,\n                                    text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          if (count_delete === 0) {\n            diffs.splice(pointer - count_insert,\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\n          } else if (count_insert === 0) {\n            diffs.splice(pointer - count_delete,\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\n          } else {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\n                [DIFF_INSERT, text_insert]);\n          }\n          pointer = pointer - count_delete - count_insert +\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff.prototype.xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff.prototype.prettyHtml = function(diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_br = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_br, '<br/>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins>' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del>' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff.prototype.text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff.prototype.text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff.prototype.levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff.prototype.toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff.prototype.fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = [DIFF_EQUAL, text];\n        } else {\n          diffs[diffsLength++] = [DIFF_DELETE, text];\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n// Export these global variables so that they survive Google's JS compiler.\n// In a browser, 'this' will be 'window'.\n// Users of node.js should 'require' the uncompressed version since Google's\n// JS compiler may break the following exports for non-browser environments.\nthis['diff'] = diff;\nthis['DIFF_DELETE'] = DIFF_DELETE;\nthis['DIFF_INSERT'] = DIFF_INSERT;\nthis['DIFF_EQUAL'] = DIFF_EQUAL;\n\nmodule.exports = diff;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1159,"column":0},"generated":{"line":1159,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1160,"column":0},"generated":{"line":1160,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1161,"column":0},"generated":{"line":1161,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1162,"column":0},"generated":{"line":1162,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1163,"column":0},"generated":{"line":1163,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1164,"column":0},"generated":{"line":1164,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1165,"column":0},"generated":{"line":1165,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1166,"column":0},"generated":{"line":1166,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1167,"column":0},"generated":{"line":1167,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1168,"column":0},"generated":{"line":1168,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1169,"column":0},"generated":{"line":1169,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1170,"column":0},"generated":{"line":1170,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1171,"column":0},"generated":{"line":1171,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1172,"column":0},"generated":{"line":1172,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1173,"column":0},"generated":{"line":1173,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1174,"column":0},"generated":{"line":1174,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1175,"column":0},"generated":{"line":1175,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1176,"column":0},"generated":{"line":1176,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1177,"column":0},"generated":{"line":1177,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1178,"column":0},"generated":{"line":1178,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1179,"column":0},"generated":{"line":1179,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1180,"column":0},"generated":{"line":1180,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1181,"column":0},"generated":{"line":1181,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1182,"column":0},"generated":{"line":1182,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1183,"column":0},"generated":{"line":1183,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1184,"column":0},"generated":{"line":1184,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1185,"column":0},"generated":{"line":1185,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1186,"column":0},"generated":{"line":1186,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1187,"column":0},"generated":{"line":1187,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1188,"column":0},"generated":{"line":1188,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1189,"column":0},"generated":{"line":1189,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1190,"column":0},"generated":{"line":1190,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1191,"column":0},"generated":{"line":1191,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1192,"column":0},"generated":{"line":1192,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1193,"column":0},"generated":{"line":1193,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1194,"column":0},"generated":{"line":1194,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1195,"column":0},"generated":{"line":1195,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1196,"column":0},"generated":{"line":1196,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1197,"column":0},"generated":{"line":1197,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1198,"column":0},"generated":{"line":1198,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1199,"column":0},"generated":{"line":1199,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1200,"column":0},"generated":{"line":1200,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1201,"column":0},"generated":{"line":1201,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1202,"column":0},"generated":{"line":1202,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1203,"column":0},"generated":{"line":1203,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1204,"column":0},"generated":{"line":1204,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1205,"column":0},"generated":{"line":1205,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1206,"column":0},"generated":{"line":1206,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1207,"column":0},"generated":{"line":1207,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1208,"column":0},"generated":{"line":1208,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1209,"column":0},"generated":{"line":1209,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1210,"column":0},"generated":{"line":1210,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1211,"column":0},"generated":{"line":1211,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1212,"column":0},"generated":{"line":1212,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1213,"column":0},"generated":{"line":1213,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1214,"column":0},"generated":{"line":1214,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1215,"column":0},"generated":{"line":1215,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1216,"column":0},"generated":{"line":1216,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1217,"column":0},"generated":{"line":1217,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1218,"column":0},"generated":{"line":1218,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1219,"column":0},"generated":{"line":1219,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1220,"column":0},"generated":{"line":1220,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1221,"column":0},"generated":{"line":1221,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1222,"column":0},"generated":{"line":1222,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1223,"column":0},"generated":{"line":1223,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1224,"column":0},"generated":{"line":1224,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1225,"column":0},"generated":{"line":1225,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1226,"column":0},"generated":{"line":1226,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1227,"column":0},"generated":{"line":1227,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1228,"column":0},"generated":{"line":1228,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1229,"column":0},"generated":{"line":1229,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1230,"column":0},"generated":{"line":1230,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1231,"column":0},"generated":{"line":1231,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1232,"column":0},"generated":{"line":1232,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1233,"column":0},"generated":{"line":1233,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1234,"column":0},"generated":{"line":1234,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1235,"column":0},"generated":{"line":1235,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1236,"column":0},"generated":{"line":1236,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1237,"column":0},"generated":{"line":1237,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1238,"column":0},"generated":{"line":1238,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1239,"column":0},"generated":{"line":1239,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1240,"column":0},"generated":{"line":1240,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1241,"column":0},"generated":{"line":1241,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1242,"column":0},"generated":{"line":1242,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1243,"column":0},"generated":{"line":1243,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1244,"column":0},"generated":{"line":1244,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1245,"column":0},"generated":{"line":1245,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1246,"column":0},"generated":{"line":1246,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1247,"column":0},"generated":{"line":1247,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1248,"column":0},"generated":{"line":1248,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1249,"column":0},"generated":{"line":1249,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1250,"column":0},"generated":{"line":1250,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1251,"column":0},"generated":{"line":1251,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1252,"column":0},"generated":{"line":1252,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1253,"column":0},"generated":{"line":1253,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1254,"column":0},"generated":{"line":1254,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1255,"column":0},"generated":{"line":1255,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1256,"column":0},"generated":{"line":1256,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1257,"column":0},"generated":{"line":1257,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1258,"column":0},"generated":{"line":1258,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1259,"column":0},"generated":{"line":1259,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1260,"column":0},"generated":{"line":1260,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1261,"column":0},"generated":{"line":1261,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1262,"column":0},"generated":{"line":1262,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1263,"column":0},"generated":{"line":1263,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1264,"column":0},"generated":{"line":1264,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1265,"column":0},"generated":{"line":1265,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1266,"column":0},"generated":{"line":1266,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1267,"column":0},"generated":{"line":1267,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1268,"column":0},"generated":{"line":1268,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1269,"column":0},"generated":{"line":1269,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1270,"column":0},"generated":{"line":1270,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1271,"column":0},"generated":{"line":1271,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1272,"column":0},"generated":{"line":1272,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1273,"column":0},"generated":{"line":1273,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1274,"column":0},"generated":{"line":1274,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1275,"column":0},"generated":{"line":1275,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1276,"column":0},"generated":{"line":1276,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1277,"column":0},"generated":{"line":1277,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1278,"column":0},"generated":{"line":1278,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1279,"column":0},"generated":{"line":1279,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1280,"column":0},"generated":{"line":1280,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1281,"column":0},"generated":{"line":1281,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1282,"column":0},"generated":{"line":1282,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1283,"column":0},"generated":{"line":1283,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1284,"column":0},"generated":{"line":1284,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1285,"column":0},"generated":{"line":1285,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1286,"column":0},"generated":{"line":1286,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1287,"column":0},"generated":{"line":1287,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1288,"column":0},"generated":{"line":1288,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1289,"column":0},"generated":{"line":1289,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1290,"column":0},"generated":{"line":1290,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1291,"column":0},"generated":{"line":1291,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1292,"column":0},"generated":{"line":1292,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1293,"column":0},"generated":{"line":1293,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1294,"column":0},"generated":{"line":1294,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1295,"column":0},"generated":{"line":1295,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1296,"column":0},"generated":{"line":1296,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1297,"column":0},"generated":{"line":1297,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1298,"column":0},"generated":{"line":1298,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1299,"column":0},"generated":{"line":1299,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1300,"column":0},"generated":{"line":1300,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1301,"column":0},"generated":{"line":1301,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1302,"column":0},"generated":{"line":1302,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1303,"column":0},"generated":{"line":1303,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1304,"column":0},"generated":{"line":1304,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1305,"column":0},"generated":{"line":1305,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1306,"column":0},"generated":{"line":1306,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1307,"column":0},"generated":{"line":1307,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1308,"column":0},"generated":{"line":1308,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1309,"column":0},"generated":{"line":1309,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1310,"column":0},"generated":{"line":1310,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1311,"column":0},"generated":{"line":1311,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1312,"column":0},"generated":{"line":1312,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1313,"column":0},"generated":{"line":1313,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1314,"column":0},"generated":{"line":1314,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1315,"column":0},"generated":{"line":1315,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1316,"column":0},"generated":{"line":1316,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1317,"column":0},"generated":{"line":1317,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1318,"column":0},"generated":{"line":1318,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1319,"column":0},"generated":{"line":1319,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1320,"column":0},"generated":{"line":1320,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1321,"column":0},"generated":{"line":1321,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1322,"column":0},"generated":{"line":1322,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1323,"column":0},"generated":{"line":1323,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1324,"column":0},"generated":{"line":1324,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1325,"column":0},"generated":{"line":1325,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1326,"column":0},"generated":{"line":1326,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1327,"column":0},"generated":{"line":1327,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1328,"column":0},"generated":{"line":1328,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1329,"column":0},"generated":{"line":1329,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1330,"column":0},"generated":{"line":1330,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1331,"column":0},"generated":{"line":1331,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1332,"column":0},"generated":{"line":1332,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1333,"column":0},"generated":{"line":1333,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1334,"column":0},"generated":{"line":1334,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1335,"column":0},"generated":{"line":1335,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1336,"column":0},"generated":{"line":1336,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1337,"column":0},"generated":{"line":1337,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1338,"column":0},"generated":{"line":1338,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1339,"column":0},"generated":{"line":1339,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1340,"column":0},"generated":{"line":1340,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1341,"column":0},"generated":{"line":1341,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1342,"column":0},"generated":{"line":1342,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1343,"column":0},"generated":{"line":1343,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1344,"column":0},"generated":{"line":1344,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1345,"column":0},"generated":{"line":1345,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1346,"column":0},"generated":{"line":1346,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1347,"column":0},"generated":{"line":1347,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1348,"column":0},"generated":{"line":1348,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1349,"column":0},"generated":{"line":1349,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1350,"column":0},"generated":{"line":1350,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1351,"column":0},"generated":{"line":1351,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1352,"column":0},"generated":{"line":1352,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1353,"column":0},"generated":{"line":1353,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1354,"column":0},"generated":{"line":1354,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1355,"column":0},"generated":{"line":1355,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1356,"column":0},"generated":{"line":1356,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1357,"column":0},"generated":{"line":1357,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1358,"column":0},"generated":{"line":1358,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1359,"column":0},"generated":{"line":1359,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1360,"column":0},"generated":{"line":1360,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1361,"column":0},"generated":{"line":1361,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1362,"column":0},"generated":{"line":1362,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1363,"column":0},"generated":{"line":1363,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1364,"column":0},"generated":{"line":1364,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1365,"column":0},"generated":{"line":1365,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1366,"column":0},"generated":{"line":1366,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1367,"column":0},"generated":{"line":1367,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1368,"column":0},"generated":{"line":1368,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1369,"column":0},"generated":{"line":1369,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1370,"column":0},"generated":{"line":1370,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1371,"column":0},"generated":{"line":1371,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1372,"column":0},"generated":{"line":1372,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1373,"column":0},"generated":{"line":1373,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1374,"column":0},"generated":{"line":1374,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1375,"column":0},"generated":{"line":1375,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1376,"column":0},"generated":{"line":1376,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1377,"column":0},"generated":{"line":1377,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1378,"column":0},"generated":{"line":1378,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1379,"column":0},"generated":{"line":1379,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1380,"column":0},"generated":{"line":1380,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1381,"column":0},"generated":{"line":1381,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1382,"column":0},"generated":{"line":1382,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1383,"column":0},"generated":{"line":1383,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1384,"column":0},"generated":{"line":1384,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1385,"column":0},"generated":{"line":1385,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1386,"column":0},"generated":{"line":1386,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1387,"column":0},"generated":{"line":1387,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1388,"column":0},"generated":{"line":1388,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1389,"column":0},"generated":{"line":1389,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1390,"column":0},"generated":{"line":1390,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1391,"column":0},"generated":{"line":1391,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1392,"column":0},"generated":{"line":1392,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1393,"column":0},"generated":{"line":1393,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1394,"column":0},"generated":{"line":1394,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1395,"column":0},"generated":{"line":1395,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1396,"column":0},"generated":{"line":1396,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1397,"column":0},"generated":{"line":1397,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1398,"column":0},"generated":{"line":1398,"column":0}},{"source":"../../../node_modules/text-diff/diff.js","original":{"line":1399,"column":0},"generated":{"line":1399,"column":0}}],"sources":{"../../../node_modules/text-diff/diff.js":"/**\n * This library was modified by Harrison Liddiard. The source code to this\n * modified version can be found at https://github.com/liddiard/google-diff/.\n * The original source code can be found at\n * http://code.google.com/p/google-diff-match-patch/. This unofficial fork is\n * not maintained by or affiliated with Google Inc. The original attribution\n * and licensing information follows.\n */\n\n/**\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff.\n * @constructor\n */\nfunction diff(options) {\n  var options = options || {};\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Timeout = options.timeout || 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.EditCost = options.editCost || 4;\n}\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/** @typedef {{0: number, 1: string}} */\ndiff.Diff;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n *     then don't run a line-level diff first to identify the changed areas.\n *     Defaults to true, which does a faster, slightly less optimal diff.\n * @param {number} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff.Diff>} Array of diff tuples.\n */\ndiff.prototype.main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  this.cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff.Diff>} Array of diff tuples.\n * @private\n */\ndiff.prototype.compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\n             [DIFF_EQUAL, shorttext],\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = this.halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.lineMode_(text1, text2, deadline);\n  }\n\n  return this.bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff.Diff>} Array of diff tuples.\n * @private\n */\ndiff.prototype.lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n\n  var diffs = this.main(text1, text2, false, deadline);\n\n  // Convert the diff back to original text.\n  this.charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push([DIFF_EQUAL, '']);\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var a = this.main(text_delete, text_insert, false, deadline);\n          for (var j = a.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, a[j]);\n          }\n          pointer = pointer + a.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff.Diff>} Array of diff tuples.\n * @private\n */\ndiff.prototype.bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff.Diff>} Array of diff tuples.\n * @private\n */\ndiff.prototype.bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.main(text1a, text2a, false, deadline);\n  var diffsb = this.main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff.prototype.linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n      lineStart = lineEnd + 1;\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n    }\n    return chars;\n  }\n\n  var chars1 = diff_linesToCharsMunge_(text1);\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff.prototype.charsToLines_ = function(diffs, lineArray) {\n  for (var x = 0; x < diffs.length; x++) {\n    var chars = diffs[x][1];\n    var text = [];\n    for (var y = 0; y < chars.length; y++) {\n      text[y] = lineArray[chars.charCodeAt(y)];\n    }\n    diffs[x][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff.prototype.commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff.prototype.commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff.prototype.commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff.prototype.halfMatch_ = function(text1, text2) {\n  if (this.Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.commonPrefix(longtext.substring(i),\n                                          shorttext.substring(j));\n      var suffixLength = dmp.commonSuffix(longtext.substring(0, i),\n                                          shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n */\ndiff.prototype.cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastequality && (lastequality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastequality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.cleanupMerge(diffs);\n  }\n  this.cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 ||\n            overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, insertion.substring(0, overlap_length1)]);\n          diffs[pointer - 1][1] =\n              deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 ||\n            overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, deletion.substring(0, overlap_length2)]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] =\n              insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] =\n              deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n */\ndiff.prototype.cleanupSemanticLossless = function(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 &&\n        char1.match(diff.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 &&\n        char2.match(diff.whitespaceRegex_);\n    var lineBreak1 = whitespace1 &&\n        char1.match(diff.linebreakRegex_);\n    var lineBreak2 = whitespace2 &&\n        char2.match(diff.linebreakRegex_);\n    var blankLine1 = lineBreak1 &&\n        one.match(diff.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 &&\n        two.match(diff.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n// Define some regex patterns for matching boundaries.\ndiff.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff.whitespaceRegex_ = /\\s/;\ndiff.linebreakRegex_ = /[\\r\\n]/;\ndiff.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n */\ndiff.prototype.cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastequality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastequality = null;\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastequality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastequality.length < this.EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastequality = null;\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n */\ndiff.prototype.cleanupMerge = function(diffs) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL,\n                                    text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          if (count_delete === 0) {\n            diffs.splice(pointer - count_insert,\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\n          } else if (count_insert === 0) {\n            diffs.splice(pointer - count_delete,\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\n          } else {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\n                [DIFF_INSERT, text_insert]);\n          }\n          pointer = pointer - count_delete - count_insert +\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff.prototype.xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff.prototype.prettyHtml = function(diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_br = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_br, '<br/>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins>' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del>' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff.prototype.text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff.prototype.text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff.prototype.levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff.prototype.toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff.prototype.fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = [DIFF_EQUAL, text];\n        } else {\n          diffs[diffsLength++] = [DIFF_DELETE, text];\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n// Export these global variables so that they survive Google's JS compiler.\n// In a browser, 'this' will be 'window'.\n// Users of node.js should 'require' the uncompressed version since Google's\n// JS compiler may break the following exports for non-browser environments.\nthis['diff'] = diff;\nthis['DIFF_DELETE'] = DIFF_DELETE;\nthis['DIFF_INSERT'] = DIFF_INSERT;\nthis['DIFF_EQUAL'] = DIFF_EQUAL;\n\nmodule.exports = diff;\n"},"lineCount":1399}},"error":null,"hash":"167697e32d4887288ca6686860c6f5f9","cacheData":{"env":{}}}