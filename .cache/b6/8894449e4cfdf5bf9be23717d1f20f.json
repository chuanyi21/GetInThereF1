{"id":"../../../node_modules/remark-emoji/index.js","dependencies":[{"name":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/package.json","includedInParent":true,"mtime":1609931669338},{"name":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/node_modules/remark-emoji/package.json","includedInParent":true,"mtime":1609413027401},{"name":"unist-util-visit","loc":{"line":1,"column":22},"parent":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/node_modules/remark-emoji/index.js","resolved":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/node_modules/unist-util-visit/index.js"},{"name":"node-emoji","loc":{"line":2,"column":22},"parent":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/node_modules/remark-emoji/index.js","resolved":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/node_modules/node-emoji/index.js"},{"name":"emoticon","loc":{"line":3,"column":25},"parent":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/node_modules/remark-emoji/index.js","resolved":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/node_modules/emoticon/index.json"}],"generated":{"js":"const visit = require('unist-util-visit');\nconst emoji = require('node-emoji');\nconst emoticon = require('emoticon');\n\nconst RE_EMOJI = /:\\+1:|:-1:|:[\\w-]+:/g;\nconst RE_SHORT = /[$@|*'\",;.=:\\-)([\\]\\\\/<>038BOopPsSdDxXzZ]{2,5}/g;\n\nconst DEFAULT_SETTINGS = {\n    padSpaceAfter: false,\n    emoticon: false\n};\n\nfunction plugin(options) {\n    const settings = Object.assign({}, DEFAULT_SETTINGS, options);\n    const pad = !!settings.padSpaceAfter;\n    const emoticonEnable = !!settings.emoticon;\n\n    function getEmojiByShortCode(match) {\n        // find emoji by shortcode - full match or with-out last char as it could be from text e.g. :-), \n        const iconFull = emoticon.find(e => e.emoticons.includes(match)); // full match\n        const iconPart = emoticon.find(e => e.emoticons.includes(match.slice(0, -1))); // second search pattern\n        const trimmedChar = iconPart ? match.slice(-1): '';\n        const addPad = pad ? ' ': '';\n        let icon = iconFull ?\n            iconFull.emoji + addPad: \n            iconPart && (iconPart.emoji + addPad +  trimmedChar);\n        return icon || match;\n    }\n\n    function getEmoji(match) {\n        const got = emoji.get(match);\n        if (pad && got !== match) {\n            return got + ' ';\n        }\n        return got;\n    }\n\n    function transformer(tree) {\n        visit(tree, 'text', function(node) {\n            node.value = node.value.replace(RE_EMOJI, getEmoji);\n            \n            if (emoticonEnable) {\n                node.value = node.value.replace(RE_SHORT, getEmojiByShortCode);\n            }\n        });\n    }\n\n    return transformer;\n}\n\nmodule.exports = plugin;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/remark-emoji/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}}],"sources":{"../../../node_modules/remark-emoji/index.js":"const visit = require('unist-util-visit');\nconst emoji = require('node-emoji');\nconst emoticon = require('emoticon');\n\nconst RE_EMOJI = /:\\+1:|:-1:|:[\\w-]+:/g;\nconst RE_SHORT = /[$@|*'\",;.=:\\-)([\\]\\\\/<>038BOopPsSdDxXzZ]{2,5}/g;\n\nconst DEFAULT_SETTINGS = {\n    padSpaceAfter: false,\n    emoticon: false\n};\n\nfunction plugin(options) {\n    const settings = Object.assign({}, DEFAULT_SETTINGS, options);\n    const pad = !!settings.padSpaceAfter;\n    const emoticonEnable = !!settings.emoticon;\n\n    function getEmojiByShortCode(match) {\n        // find emoji by shortcode - full match or with-out last char as it could be from text e.g. :-), \n        const iconFull = emoticon.find(e => e.emoticons.includes(match)); // full match\n        const iconPart = emoticon.find(e => e.emoticons.includes(match.slice(0, -1))); // second search pattern\n        const trimmedChar = iconPart ? match.slice(-1): '';\n        const addPad = pad ? ' ': '';\n        let icon = iconFull ?\n            iconFull.emoji + addPad: \n            iconPart && (iconPart.emoji + addPad +  trimmedChar);\n        return icon || match;\n    }\n\n    function getEmoji(match) {\n        const got = emoji.get(match);\n        if (pad && got !== match) {\n            return got + ' ';\n        }\n        return got;\n    }\n\n    function transformer(tree) {\n        visit(tree, 'text', function(node) {\n            node.value = node.value.replace(RE_EMOJI, getEmoji);\n            \n            if (emoticonEnable) {\n                node.value = node.value.replace(RE_SHORT, getEmojiByShortCode);\n            }\n        });\n    }\n\n    return transformer;\n}\n\nmodule.exports = plugin;\n"},"lineCount":52}},"error":null,"hash":"fc5ef28d53038d889f404de29c492e13","cacheData":{"env":{}}}