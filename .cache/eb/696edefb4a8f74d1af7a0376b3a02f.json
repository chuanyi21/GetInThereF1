{"id":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","dependencies":[{"name":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/package.json","includedInParent":true,"mtime":1609931669338},{"name":"/Users/chuanyi/Desktop/Personal Projects/GetInThereF1/node_modules/remark-parse/package.json","includedInParent":true,"mtime":1609413027378}],"generated":{"js":"'use strict'\n\n// A line containing no characters, or a line containing only spaces (U+0020) or\n// tabs (U+0009), is called a blank line.\n// See <https://spec.commonmark.org/0.29/#blank-line>.\nvar reBlankLine = /^[ \\t]*(\\n|$)/\n\n// Note that though blank lines play a special role in lists to determine\n// whether the list is tight or loose\n// (<https://spec.commonmark.org/0.29/#blank-lines>), it’s done by the list\n// tokenizer and this blank line tokenizer does not have to be responsible for\n// that.\n// Therefore, configs such as `blankLine.notInList` do not have to be set here.\nmodule.exports = blankLine\n\nfunction blankLine(eat, value, silent) {\n  var match\n  var subvalue = ''\n  var index = 0\n  var length = value.length\n\n  while (index < length) {\n    match = reBlankLine.exec(value.slice(index))\n\n    if (match == null) {\n      break\n    }\n\n    index += match[0].length\n    subvalue += match[0]\n  }\n\n  if (subvalue === '') {\n    return\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true\n  }\n\n  eat(subvalue)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/remark-parse/lib/tokenize/blank-line.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"../../../node_modules/remark-parse/lib/tokenize/blank-line.js":"'use strict'\n\n// A line containing no characters, or a line containing only spaces (U+0020) or\n// tabs (U+0009), is called a blank line.\n// See <https://spec.commonmark.org/0.29/#blank-line>.\nvar reBlankLine = /^[ \\t]*(\\n|$)/\n\n// Note that though blank lines play a special role in lists to determine\n// whether the list is tight or loose\n// (<https://spec.commonmark.org/0.29/#blank-lines>), it’s done by the list\n// tokenizer and this blank line tokenizer does not have to be responsible for\n// that.\n// Therefore, configs such as `blankLine.notInList` do not have to be set here.\nmodule.exports = blankLine\n\nfunction blankLine(eat, value, silent) {\n  var match\n  var subvalue = ''\n  var index = 0\n  var length = value.length\n\n  while (index < length) {\n    match = reBlankLine.exec(value.slice(index))\n\n    if (match == null) {\n      break\n    }\n\n    index += match[0].length\n    subvalue += match[0]\n  }\n\n  if (subvalue === '') {\n    return\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true\n  }\n\n  eat(subvalue)\n}\n"},"lineCount":44}},"error":null,"hash":"78c7cab16f0e5735799dc54d06e18ac5","cacheData":{"env":{}}}